pipeline {
    agent any
    environment {
        SONAR_AUTH_TOKEN = 'sqp_475a950b8e2d54afb4ada49611e9be1b306fe020'
    }
    tools {
        nodejs '22.2.0'
    }
    stages {
        stage('SCM') {
            steps {
                checkout scm
            }
        }
        stage('Install Dependencies') {
            steps {
                echo 'Installing dependencies...'
                sh 'npm install'
            }
        }
        stage('Start Server') {
            steps {
                echo 'Starting the server...'
                sh 'node server.js &'
                sleep 10
            }
        }
        stage('Build') {
            steps {
                echo 'Packaging the application to build artifact...'
                sh 'rm -rf *.tar.gz'
                sh 'tar czf nanogram-$BUILD_NUMBER.tar.gz node_modules server.js package.json public Controllers Models Routers dbConnections.js README.md .gitignore'
            }
        }
        stage('Test') {
            steps {
                echo 'Running tests using Mocha and Chai...'
                sh 'npm test'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                echo 'Running SonarQube analysis...'
                withSonarQubeEnv('SonarQube') {
                    sh '''
                        #!/bin/bash
                        echo "Running SonarQube analysis..."
                        /var/jenkins_home/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarScanner/bin/sonar-scanner \
                        -Dsonar.projectKey=SIT753-DevOps-Pipeline-with-Jenkins \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://192.168.220.1:9000 \
                        -Dsonar.login=${SONAR_AUTH_TOKEN}
                    '''
                }
            }  
        }
        stage ("Deploy to staging") {
            steps {
                echo "This stage deploys the application to a staging server."
                echo "Staging server: Docker"
            }
        }
        /*
        stage ("Deploy to production") {
            steps {
                echo "This stage deploys the application to a production server."
                echo "Production server: AWS EC2 instance"
            }
        }
        stage ('Monitoring and Alerting') {
            steps {
                echo "This stage monitors the application in the production for any issues"
                echo "Production server: Datadog or New Relic"
            }
        }  
        */
    }
    post {
        always {
            archiveArtifacts artifacts: '*.tar.gz', 
            onlyIfSuccessful: true
        }
    }
}    
