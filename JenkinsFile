pipeline {
    agent any
    tools {
        nodejs '22.2.0'
    }
    stages {
        stage('SCM') {
            steps {
                checkout scm
            }
        }
        stage('Install Dependencies') {
            steps {
                echo 'Installing dependencies...'
                sh 'npm install'
            }
        }
        stage('Start Server') {
            steps {
                echo 'Starting the server...'
                sh 'node server.js &'
                sleep 10
            }
        }
        stage('Build') {
            steps {
                echo 'Packaging the application to build artifact...'
                sh 'rm -rf *.tar.gz'
                sh 'tar czf nanogram-$BUILD_NUMBER.tar.gz node_modules server.js package.json public Controllers Models Routers Test dbConnections.js README.md .gitignore'
            }
        }
        stage('Test') {
            steps {
                echo 'Running tests using Mocha and Chai...'
                sh 'npm test'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                echo 'Running SonarQube analysis...'
                script {
                    def scannerHome = tool name: 'SonarScanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                    withSonarQubeEnv('SonarQube') {
                        sh "${scannerHome}/bin/sonar-scanner -D'sonar.projectKey=local-project' -D'sonar.sources=.' -D'sonar.host.url=http://localhost:9000' -D'sonar.token=sqp_df048c9432d298001e2e76da13d26c422ecfba36'"
                    }
                }
            }
        }
        /*
        
        stage ("Code Quality Analysis") {
            steps {
                echo "This stage integrates a code analysis tool to analyse the code and ensure it meets industry standards."
                echo "Code analysis tool: SonarQube"
            }
        }
        stage ("Deploy to staging") {
            steps {
                echo "This stage deploys the application to a staging server."
                echo "Staging server: AWS EC2 instance"
            }
        }
        stage ("Deploy to production") {
            steps {
                echo "This stage deploys the application to a production server."
                echo "Production server: AWS EC2 instance"
            }
        }
        stage ('Monitoring and Alerting') {
            steps {
                echo "This stage monitors the application in the production for any issues"
                echo "Production server: Datadog or New Relic"
            }
        }  
        */
    }
    post {
        always {
            archiveArtifacts artifacts: '*.tar.gz', 
            onlyIfSuccessful: true
        }
    }
}     
